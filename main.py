from datetime import datetime
import telebot
from pycbrf import ExchangeRates
import random
import time
#import config
from telebot import types
from cbrf.models import DailyCurrenciesRates

bot = telebot.TeleBot('5871761173:AAGzSfS3RSD5-cAh79U5omOEB2-P0X3mmZM')










@bot.message_handler(commands=['start'])
def start(message):
    is_subscribed = bot.get_chat_member('@NIGHT_GROUND', message.chat.id).status == 'member'
    if is_subscribed is True:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        itembtn2 = telebot.types.KeyboardButton('üìà –ö—É—Ä—Å')
        item3 = telebot.types.KeyboardButton("üéâ –†–æ–∑—ã–≥—Ä—ã—à–∏")
        item2 = telebot.types.KeyboardButton("‚úÖ –†–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å")
        #item4 = telebot.types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
        item5 = telebot.types.KeyboardButton("üéÅ –ê–∫—Ü–∏–∏")
        markup.add(itembtn2,item5, item3, item2)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –ø–æ–∫—É–ø–∫–æ–π –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ? –ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É!".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)


    else:
        markup = types.InlineKeyboardMarkup(row_width=2)
        item3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/NIGHT_GROUND')

        markup.add(item3)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)

        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        itembtn2 = telebot.types.KeyboardButton('–ì–æ—Ç–æ–≤–æ!')
        markup.add(itembtn2)
        time.sleep(2)
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ì–æ—Ç–æ–≤–æ, –∫–∞–∫ –≤—Å–µ —Å–¥–µ–ª–∞–µ—Ç–µ".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)



last_time = {}



@bot.message_handler(content_types=['text'])
def message(message):
    if message.chat.type == 'private':
        if message.text == '–ì–æ—Ç–æ–≤–æ!':
            is_subscribed = bot.get_chat_member('@NIGHT_GROUND', message.chat.id).status == 'member'
            if is_subscribed is True:
                markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                itembtn2 = telebot.types.KeyboardButton('üìà –ö—É—Ä—Å')
                item3 = telebot.types.KeyboardButton("üéâ –†–æ–∑—ã–≥—Ä—ã—à–∏")
                item2 = telebot.types.KeyboardButton("‚úÖ –†–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å")
                #item4 = telebot.types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
                item5 = telebot.types.KeyboardButton("üéÅ –ê–∫—Ü–∏–∏")
                markup.add(itembtn2,item5, item3, item2)
                bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –ø–æ–∫—É–ø–∫–æ–π –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ? –ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É!".format(message.from_user, bot.get_me()),
                    parse_mode='html', reply_markup=markup)


            else:
                markup = types.InlineKeyboardMarkup(row_width=2)
                item3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/NIGHT_GROUND')
                markup.add(item3)
                # bot.send_message(message.chat.id, "–•–ï–†!".format(message.from_user, bot.get_me()),
                #     parse_mode='html', reply_markup=markup)


        is_subscribed = bot.get_chat_member('@NIGHT_GROUND', message.chat.id).status == 'member'
        if is_subscribed is True:
            if message.text == '‚úÖ –†–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å':


                    daily = DailyCurrenciesRates()
                    daily.date
                    daily.get_by_id('R01375').name
                    global price
                    a = float(daily.get_by_id('R01375').value)

                    ################################################################################################################################################################

                    #price = a / 10
                    price = a

                    ################################################################################################################################################################

                    print(round((price), 2), '–†–∞—Å—á–µ—Ç.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))

                    v = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –Æ–∞–Ω—è—Ö')
                    bot.register_next_step_handler(v, returning)


            elif message.text == '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
                        bot.send_message(message.chat.id, str(random.randint(0,1000)))




            elif message.text == 'üìà –ö—É—Ä—Å':
                    daily = DailyCurrenciesRates()
                    daily.date
                    daily.get_by_id('R01375').name

                    a = float(daily.get_by_id('R01375').value)

                    ################################################################################################################################################################

                    #price = a / 10
                    price = a
                    
                    ################################################################################################################################################################

                    print(price, '–ö—É—Ä—Å.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))
                    bot.send_message(message.chat.id, f'–ö—É—Ä—Å —é–∞–Ω—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {round((11.55), 2)}')

            elif message.text == 'üéÅ –ê–∫—Ü–∏–∏':

                    bot.send_message(message.chat.id, '''–°–µ–π—á–∞—Å –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –∞–∫—Ü–∏—é "–ü–†–ò–í–ï–î–ò –î–†–£–ì–ê".

    –ï—Å–ª–∏ –≤—ã –ø—Ä–∏–≤–æ–¥–∏—Ç–µ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∑–∞–∫–∞–∑ –≤–º–µ—Å—Ç–∏ —Å –≤–∞–º–∏ - —Å–∫–∏–¥–∫–∞ 500 —Ä—É–± –í–ê–ú –∏ –î–†–£–ì–£!''')
                    print('–ê–∫—Ü–∏–∏.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))

            elif message.text == 'üéâ –†–æ–∑—ã–≥—Ä—ã—à–∏':
                        is_subscribed = bot.get_chat_member('@NIGHT_GROUND', message.chat.id).status == 'member'
                        if is_subscribed is True:
                            bot.send_message(message.chat.id, "–£–∂–µ —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ.")
                            print('–†–æ–∑—ã–≥—Ä—ã—à.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))
                        else:
                            markup = types.InlineKeyboardMarkup(row_width=69)
                            item3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/NIGHT_GROUND')
                            markup.add(item3)
                            bot.send_message(message.chat.id, f'–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!', reply_markup=markup)
            elif message.text == '–ì–æ—Ç–æ–≤–æ!':
                print('fake_error', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))


            else:
                    bot.send_message(message.chat.id, '''–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢
        –ù–∞–∂–º–∏—Ç–µ /start''')
        else:
            markup = types.InlineKeyboardMarkup(row_width=2)
            item3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='t.me/NIGHT_GROUND')

            markup.add(item3)
            bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!".format(message.from_user, bot.get_me()),
                parse_mode='html', reply_markup=markup)

            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            itembtn2 = telebot.types.KeyboardButton('–ì–æ—Ç–æ–≤–æ!')
            markup.add(itembtn2)
            time.sleep(2)
            bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ì–æ—Ç–æ–≤–æ, –∫–∞–∫ –≤—Å–µ —Å–¥–µ–ª–∞–µ—Ç–µ".format(message.from_user, bot.get_me()),
                parse_mode='html', reply_markup=markup)



@bot.message_handler(commands=['return'])
def returning(message):
    if message.text.isdigit():
        d = int(message.text)

        if d >= 100000000:
            print("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ")
            bot.send_message(message.chat.id, f'–°–ª–∏–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ!')
        else:
           if d <= 500:
                m = round((d *(11.55)+1400+700))
                bot.send_message(message.chat.id, f'–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏ {m} —Ä—É–±.')
                markup = types.InlineKeyboardMarkup(row_width=2)
                item3 = types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è", url='https://t.me/MANAGER_NIGHT_GROUND')
                markup.add(item3)
                bot.send_message(message.chat.id, f'–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.', reply_markup=markup)

                print(message.text)

           elif d >= 501:
                m = round((d *(11.55) + 700))
                last_price = round(m + (m/100*15))
                bot.send_message(message.chat.id, f'–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏ {last_price} —Ä—É–±.')
                markup = types.InlineKeyboardMarkup(row_width=2)
                item3 = types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è", url='https://t.me/MANAGER_NIGHT_GROUND')
                markup.add(item3)
                bot.send_message(message.chat.id, f'–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.', reply_markup=markup)

                print(message.text)

    else:
        bot.reply_to(message, f'–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'svaz':
                bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                    text="–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º!")

    except Exception as e:
        print(repr(e))








bot.polling(none_stop=True)